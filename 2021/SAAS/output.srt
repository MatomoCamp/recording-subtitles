1
00:00:00,000 --> 00:00:12,800
So hello, everyone, and welcome in this talk.

2
00:00:12,800 --> 00:00:14,840
Today, we are going to talk about how

3
00:00:14,840 --> 00:00:17,760
to configure Matamow for SAS and get

4
00:00:17,760 --> 00:00:21,320
relevant data for your business.

5
00:00:21,320 --> 00:00:24,800
So I'm your speaker for the next minutes.

6
00:00:24,800 --> 00:00:26,440
I'm presenting myself.

7
00:00:26,440 --> 00:00:28,680
My name is Ronan HÃ©lot.

8
00:00:28,680 --> 00:00:32,440
I'm an independent web developer in France.

9
00:00:32,440 --> 00:00:36,280
I'm also a web development teacher in several schools.

10
00:00:36,280 --> 00:00:41,200
And two years ago, I built up a MOOC website

11
00:00:41,200 --> 00:00:44,640
called ronan-hellot.fr, and will

12
00:00:44,640 --> 00:00:47,600
contain many courses about digital analytics

13
00:00:47,600 --> 00:00:50,520
and development techniques.

14
00:00:50,520 --> 00:00:54,320
And I'm also a Matamow contributor.

15
00:00:54,320 --> 00:01:00,560
I made many contributions, like TEMs or plugins.

16
00:01:00,560 --> 00:01:04,320
The one, it's a dark TEM to turn your Matamow interface

17
00:01:04,320 --> 00:01:05,720
into dark.

18
00:01:05,720 --> 00:01:12,360
Google TEM to prevent incoming users to Matamow

19
00:01:12,360 --> 00:01:16,080
from Google Analytics to the Matamow interface.

20
00:01:16,080 --> 00:01:19,360
They will love the Google TEM applying

21
00:01:19,360 --> 00:01:21,160
to the Matamow interface.

22
00:01:21,160 --> 00:01:25,520
And KPI widget plugin, which provides you many widgets

23
00:01:25,520 --> 00:01:28,720
that you can put on your dashboard

24
00:01:28,720 --> 00:01:35,440
and will generate tiny widgets with a single KPI on it.

25
00:01:35,440 --> 00:01:37,920
The purpose of this talk, we are talking

26
00:01:37,920 --> 00:01:40,240
about Matamow advanced configuration

27
00:01:40,240 --> 00:01:42,880
and how to collect specific data.

28
00:01:42,880 --> 00:01:47,040
We are adding more context to the data we are collecting

29
00:01:47,040 --> 00:01:50,000
and how to create awesome reports in your SAS.

30
00:01:50,000 --> 00:01:54,600
And then we are going further with premium plugins.

31
00:01:54,600 --> 00:01:56,600
We are not talking about infrastructure

32
00:01:56,600 --> 00:01:59,760
because there are many people at Matamow Camp

33
00:01:59,760 --> 00:02:02,760
already did it better than I can.

34
00:02:02,760 --> 00:02:06,800
And it's not the purpose of my talk.

35
00:02:06,800 --> 00:02:11,640
We are assuming that you already are GDPR compliant.

36
00:02:11,640 --> 00:02:17,040
So you already have the cookie wall or cookie banner

37
00:02:17,040 --> 00:02:19,760
because we are going to use the visitor log, the user

38
00:02:19,760 --> 00:02:21,480
ID, and user profile.

39
00:02:21,480 --> 00:02:27,320
And those functionality require user consent

40
00:02:27,320 --> 00:02:30,520
being GDPR compliant.

41
00:02:30,520 --> 00:02:36,920
So I imagine that you are in a basic Matamow configuration.

42
00:02:36,920 --> 00:02:40,000
So you already have deployed the default tracking

43
00:02:40,000 --> 00:02:43,040
code on every single page you want to track.

44
00:02:43,040 --> 00:02:46,760
And this default tracking code will provide you

45
00:02:46,760 --> 00:02:51,600
some data, such as pages and sessions, unique and new

46
00:02:51,600 --> 00:02:55,760
visitors, some default events, the hardware and software

47
00:02:55,760 --> 00:03:00,440
configuration visitors have to walk through your website.

48
00:03:00,440 --> 00:03:02,760
And sometimes, if you have an internal search,

49
00:03:02,760 --> 00:03:05,920
the terms, basically tracking, some real-time action,

50
00:03:05,920 --> 00:03:10,680
downloads as default events, and IP-based location.

51
00:03:10,680 --> 00:03:13,600
So that's all the data or a part of the data

52
00:03:13,600 --> 00:03:16,800
that Matamow already collects for you.

53
00:03:16,800 --> 00:03:18,160
And you need a bit more.

54
00:03:18,160 --> 00:03:19,840
You need user segmentation.

55
00:03:19,840 --> 00:03:25,000
You need a well-synced user profile to your SAS.

56
00:03:25,000 --> 00:03:29,040
We need, again, to add more context to the data we collect.

57
00:03:29,040 --> 00:03:34,160
And we will be able to create custom events, custom goals.

58
00:03:34,160 --> 00:03:37,320
And we will see in the second part

59
00:03:37,320 --> 00:03:40,240
how to create a report of JavaScript error

60
00:03:40,240 --> 00:03:45,960
that the user will find on your SAS platform.

61
00:03:45,960 --> 00:03:50,120
The first part of this talk is about collecting driven data.

62
00:03:50,120 --> 00:03:51,720
And in a second time, we will see

63
00:03:51,720 --> 00:03:54,880
how to apply them in a properly reports

64
00:03:54,880 --> 00:03:59,880
or directly in your SAS platform.

65
00:03:59,880 --> 00:04:01,880
One of the first things you have to do

66
00:04:01,880 --> 00:04:05,200
is to switch between the basic Matamow configuration

67
00:04:05,200 --> 00:04:09,400
to the Matamow Tag Manager configuration.

68
00:04:09,400 --> 00:04:13,480
To do this, you just have to switch between the tracking

69
00:04:13,480 --> 00:04:17,920
code that provides by Matamow and placing this Matamow Tag

70
00:04:17,920 --> 00:04:22,600
Manager code on every single page you want to track.

71
00:04:22,600 --> 00:04:28,600
Don't forget to place the default Matamow statistic

72
00:04:28,600 --> 00:04:32,080
tag, which allows you to recreate the default Matamow

73
00:04:32,080 --> 00:04:33,760
configuration.

74
00:04:33,760 --> 00:04:36,480
Matamow Tag Manager provides you a cool interface

75
00:04:36,480 --> 00:04:39,880
to create tags or configuring some cool stuff

76
00:04:39,880 --> 00:04:42,960
like custom events on many, many things

77
00:04:42,960 --> 00:04:45,720
that we will see in this talk.

78
00:04:48,440 --> 00:04:51,320
The things that will very, very help

79
00:04:51,320 --> 00:04:54,200
us to configure Matamow for your SAS

80
00:04:54,200 --> 00:04:56,880
is building up custom events.

81
00:04:56,880 --> 00:05:01,160
During a long visit, your user will perform key actions

82
00:05:01,160 --> 00:05:03,320
on your software or your website.

83
00:05:03,320 --> 00:05:07,360
And you have to track all the journey of your users

84
00:05:07,360 --> 00:05:10,760
to trigger those custom events and collect them

85
00:05:10,760 --> 00:05:13,320
into your Matamow interface.

86
00:05:13,320 --> 00:05:16,440
This event will be sent back to Matamow

87
00:05:16,440 --> 00:05:20,840
and collected and displayed in the events report right

88
00:05:20,840 --> 00:05:24,520
in your Matamow instance.

89
00:05:24,520 --> 00:05:28,840
To start, regularly, I create two basics events

90
00:05:28,840 --> 00:05:32,960
based on the form submission.

91
00:05:32,960 --> 00:05:36,760
There is the login and the register form submission

92
00:05:36,760 --> 00:05:39,000
on your SAS.

93
00:05:39,000 --> 00:05:44,560
And we just have to create this kind of event.

94
00:05:44,560 --> 00:05:47,480
So look, you go just in your back office,

95
00:05:47,480 --> 00:05:50,680
create a Matamow Analytics tag.

96
00:05:50,680 --> 00:05:56,720
You switch then the tag to the tracking type of events.

97
00:05:56,720 --> 00:05:59,200
And then you have to configure your events.

98
00:05:59,200 --> 00:06:01,400
I set the event category to health

99
00:06:01,400 --> 00:06:05,520
to keep login and register events under the same name

100
00:06:05,520 --> 00:06:08,640
and define an event name as a login.

101
00:06:08,640 --> 00:06:12,560
We then have to create a trigger, the form submit.

102
00:06:12,560 --> 00:06:15,760
And we just plug that trigger to the form ID

103
00:06:15,760 --> 00:06:20,400
and listen for a form submission.

104
00:06:20,400 --> 00:06:23,680
So we have to find the form ID.

105
00:06:23,680 --> 00:06:25,480
Just have to inspect your website

106
00:06:25,480 --> 00:06:30,800
and search for the ID of your login or register form.

107
00:06:30,800 --> 00:06:34,880
Here is a login.form ID.

108
00:06:34,880 --> 00:06:37,600
And then your trigger will be created and assigned

109
00:06:37,600 --> 00:06:41,000
to the Matamow event tag.

110
00:06:41,000 --> 00:06:45,160
Don't forget to publish a new container on your website

111
00:06:45,160 --> 00:06:47,480
or it won't work.

112
00:06:47,480 --> 00:06:51,840
And then you just, in this few steps,

113
00:06:51,840 --> 00:06:55,640
have the ability to collect every single time a user is

114
00:06:55,640 --> 00:06:58,840
just logged in in your SAS platform.

115
00:06:58,840 --> 00:06:59,880
Don't worry about that.

116
00:06:59,880 --> 00:07:02,840
You can create the same thing for register events

117
00:07:02,840 --> 00:07:05,280
and for many, many things.

118
00:07:05,280 --> 00:07:07,920
I'm talking here about some entities

119
00:07:07,920 --> 00:07:12,120
that you manage on your SAS platform.

120
00:07:12,120 --> 00:07:15,640
Let's imagine for a CRM platform that you have a contact

121
00:07:15,640 --> 00:07:17,520
that the user can create.

122
00:07:17,520 --> 00:07:19,200
Every single time they create a contact

123
00:07:19,200 --> 00:07:22,360
or another kind of entity.

124
00:07:22,360 --> 00:07:26,680
They can make stuff like, in development,

125
00:07:26,680 --> 00:07:31,040
we say it's a CRUD, CRUD for create, read, update, and delete.

126
00:07:31,040 --> 00:07:33,480
There are the four main actions that you

127
00:07:33,480 --> 00:07:37,720
can do to almost any entity on your platform.

128
00:07:37,720 --> 00:07:41,600
And it will be interesting of collecting those actions

129
00:07:41,600 --> 00:07:48,240
and placing them in the visitor journey on your website.

130
00:07:48,240 --> 00:07:52,640
One of the four actions of the CRUD, the red action,

131
00:07:52,640 --> 00:07:59,640
is already tracked by Matomo only if the entity has

132
00:07:59,640 --> 00:08:02,160
their own page.

133
00:08:02,160 --> 00:08:05,880
Like, for example, if you see Airbnb,

134
00:08:05,880 --> 00:08:11,360
when you create a new house, the house

135
00:08:11,360 --> 00:08:14,760
will be available for everyone directly from Google.

136
00:08:14,760 --> 00:08:21,080
So Matomo can collect the view of this entity.

137
00:08:21,080 --> 00:08:22,840
But for the create, update, and delete,

138
00:08:22,840 --> 00:08:25,600
there is no custom events by default.

139
00:08:25,600 --> 00:08:29,440
So you have to set them up just as we

140
00:08:29,440 --> 00:08:33,880
saw with the form submission event.

141
00:08:33,880 --> 00:08:35,480
Another application that I already

142
00:08:35,480 --> 00:08:39,000
made for several platforms is like when

143
00:08:39,000 --> 00:08:45,080
you have a SAS platform with many workspace and many teams.

144
00:08:45,080 --> 00:08:47,600
A user can create one or many teams.

145
00:08:47,600 --> 00:08:49,880
And then you can add a member, remove a member,

146
00:08:49,880 --> 00:08:51,360
or delete a team.

147
00:08:51,360 --> 00:08:54,080
This is a factual example of how you

148
00:08:54,080 --> 00:08:56,520
can manage your different custom events

149
00:08:56,520 --> 00:09:02,160
and how you can name them to finally visualize them right

150
00:09:02,160 --> 00:09:03,680
in your Matomo instance.

151
00:09:03,680 --> 00:09:09,000
Don't forget to package all the different events of the CRUD

152
00:09:09,000 --> 00:09:13,000
under the same event category name.

153
00:09:13,000 --> 00:09:19,200
This category name will be team event, probably.

154
00:09:19,200 --> 00:09:22,600
Then now you have your custom events

155
00:09:22,600 --> 00:09:24,400
deployed on your platform.

156
00:09:24,400 --> 00:09:26,520
And you have the ability in Matomo

157
00:09:26,520 --> 00:09:30,320
to create custom goals based on those events.

158
00:09:30,320 --> 00:09:34,600
So Matomo provides you an easy interface to configure a goal

159
00:09:34,600 --> 00:09:40,800
and mark all the sessions that achieve one or many goals

160
00:09:40,800 --> 00:09:46,000
to consider that the visit has converted your user

161
00:09:46,000 --> 00:09:49,120
into a lead or a customer.

162
00:09:49,120 --> 00:09:52,800
So for this part, you just have to create a new goal,

163
00:09:52,800 --> 00:09:55,560
like one of the three you can see there.

164
00:09:55,560 --> 00:09:58,680
For the login, as you see, my goal name is login.

165
00:09:58,680 --> 00:10:01,720
The description is for a user connected to his account.

166
00:10:01,720 --> 00:10:06,640
And the goal is triggered when a user sends an event.

167
00:10:06,640 --> 00:10:10,000
And the event name is exactly a login, so exactly what

168
00:10:10,000 --> 00:10:16,520
we set up at the previous slide.

169
00:10:16,520 --> 00:10:20,960
Another huge part that will be really interesting

170
00:10:20,960 --> 00:10:25,680
to add context to Matomo is using custom dimensions.

171
00:10:25,680 --> 00:10:29,960
Because the data that Matomo collects, basically,

172
00:10:29,960 --> 00:10:31,560
is very lacking context.

173
00:10:31,560 --> 00:10:33,880
And for some reason, we are using

174
00:10:33,880 --> 00:10:38,600
Matomo to add this context to the data.

175
00:10:38,600 --> 00:10:43,440
Custom dimensions are not really hard to set up.

176
00:10:43,440 --> 00:10:47,040
But you have to follow some rules.

177
00:10:47,040 --> 00:10:49,200
And here, in our configuration, we

178
00:10:49,200 --> 00:10:51,120
are using Matomo Tag Manager.

179
00:10:51,120 --> 00:10:56,320
And in Matomo Tag Manager, we have to set up a data layer,

180
00:10:56,320 --> 00:11:00,280
like the piece of code you can see from the code snippet

181
00:11:00,280 --> 00:11:03,360
you just see on the screen.

182
00:11:03,360 --> 00:11:06,280
This code snippet is a data layer

183
00:11:06,280 --> 00:11:10,240
that I filled with two custom values, the logged in,

184
00:11:10,240 --> 00:11:12,840
actually set to true, and the user plan,

185
00:11:12,840 --> 00:11:16,120
actually set to premium.

186
00:11:16,120 --> 00:11:20,000
And then in your Matomo Tag Manager,

187
00:11:20,000 --> 00:11:25,360
you just have to go back to your main Matomo statistic tag

188
00:11:25,360 --> 00:11:31,960
and change the configuration of your Matomo variable.

189
00:11:31,960 --> 00:11:34,520
In this Matomo variable, if you scroll down,

190
00:11:34,520 --> 00:11:38,560
you will find this section about custom dimension.

191
00:11:38,560 --> 00:11:43,160
Then you can add an automatic tracking

192
00:11:43,160 --> 00:11:44,520
of your custom dimensions.

193
00:11:44,520 --> 00:11:46,960
Here, the first index is for user plan.

194
00:11:46,960 --> 00:11:53,080
And the second index is for logged in or not user.

195
00:11:53,080 --> 00:11:55,960
So about the two custom dimensions,

196
00:11:55,960 --> 00:12:01,760
I already tell you, as you can see, when you are logged in,

197
00:12:01,760 --> 00:12:04,520
we just display true in the data layer.

198
00:12:04,520 --> 00:12:07,240
And when you are anonymous people,

199
00:12:07,240 --> 00:12:11,400
or not just not logged in, we set false in the data layer.

200
00:12:11,400 --> 00:12:15,920
Those two kinds of data will be uploaded to Matomo

201
00:12:15,920 --> 00:12:17,840
every time you change the page.

202
00:12:17,840 --> 00:12:24,720
And we will have a full vision of the status of the user.

203
00:12:24,720 --> 00:12:27,720
The second dimensions I already set up many times

204
00:12:27,720 --> 00:12:29,280
is the user plan.

205
00:12:29,280 --> 00:12:34,240
Based on the business of many SaaS platforms,

206
00:12:34,240 --> 00:12:38,000
will be a premium to premium strategy.

207
00:12:38,000 --> 00:12:41,840
In the first time, we have many and several people

208
00:12:41,840 --> 00:12:43,840
using a free plan.

209
00:12:43,840 --> 00:12:45,440
That's what you can see in the first data

210
00:12:45,440 --> 00:12:47,280
layer displayed on the slide.

211
00:12:47,280 --> 00:12:52,120
And then the user will try the soft using a trial

212
00:12:52,120 --> 00:12:57,440
period, as long as one or many weeks,

213
00:12:57,440 --> 00:13:00,560
depending of your solution.

214
00:13:00,560 --> 00:13:04,000
And then during this period, I send specific code

215
00:13:04,000 --> 00:13:07,680
as a trial for the value of the user plan variable

216
00:13:07,680 --> 00:13:09,320
in data layer.

217
00:13:09,320 --> 00:13:13,840
And then when the trial period has ended, my user

218
00:13:13,840 --> 00:13:15,960
just switched to the premium plan.

219
00:13:15,960 --> 00:13:23,840
And I just send that value into the data layer of Matomo.

220
00:13:23,840 --> 00:13:27,320
Now we know how to create custom events, custom goals,

221
00:13:27,320 --> 00:13:29,320
and custom dimensions.

222
00:13:29,320 --> 00:13:35,760
But we have to attach all of those data to our user.

223
00:13:35,760 --> 00:13:37,560
Because we are in a SaaS configuration,

224
00:13:37,560 --> 00:13:44,080
and we have a log in, and our user is our main entity.

225
00:13:44,080 --> 00:13:46,720
And we have to attach all of the data.

226
00:13:46,720 --> 00:13:52,640
So we are going to know how to pass a visitor to a user.

227
00:13:52,640 --> 00:13:59,200
Matomo has a complete functionality about user ID.

228
00:13:59,200 --> 00:14:02,720
And two ways of deploying it into your code.

229
00:14:02,720 --> 00:14:06,640
Here, the first line, as you can see, is pack.push.

230
00:14:06,640 --> 00:14:09,920
Set user ID is for the default Matomo tracking code.

231
00:14:09,920 --> 00:14:12,520
Or if you are using Matomo Tag Manager,

232
00:14:12,520 --> 00:14:14,920
you can continue to use your data layer

233
00:14:14,920 --> 00:14:18,000
and just add a custom variable as user ID,

234
00:14:18,000 --> 00:14:20,840
and then as value, the unique identifier

235
00:14:20,840 --> 00:14:25,080
you just choose between data of your database.

236
00:14:25,080 --> 00:14:30,040
The user ID will act as a bridge between your database

237
00:14:30,040 --> 00:14:31,840
and the Matomo database.

238
00:14:31,840 --> 00:14:37,000
It will allow you to track user across different devices

239
00:14:37,000 --> 00:14:40,400
they use at home, like a smartphone, or a laptop,

240
00:14:40,400 --> 00:14:42,840
or a business computer.

241
00:14:42,840 --> 00:14:46,120
You will be able to track them.

242
00:14:46,120 --> 00:14:50,580
And then, as you will see in the next slide,

243
00:14:50,580 --> 00:14:54,760
you are able to see every single visit on action and event

244
00:14:54,760 --> 00:15:00,240
triggered right on the profile generated in the Matomo site.

245
00:15:00,240 --> 00:15:03,880
So here is my own profile.

246
00:15:03,880 --> 00:15:07,520
As you can see, I'm at 100 visits.

247
00:15:07,520 --> 00:15:11,680
In reality, I'm very, very far of 100 visits, very more.

248
00:15:11,680 --> 00:15:15,520
But the profile is limited to the last 100

249
00:15:15,520 --> 00:15:18,160
visits at the display.

250
00:15:18,160 --> 00:15:20,960
I'm sure that you can expand this value.

251
00:15:20,960 --> 00:15:23,180
But actually, it's locked to the 100.

252
00:15:23,180 --> 00:15:26,600
And you will find on this profile every action

253
00:15:26,600 --> 00:15:30,320
and every event that the user trigger

254
00:15:30,320 --> 00:15:32,280
on the Matomo interface.

255
00:15:32,280 --> 00:15:37,560
You will see in the next slide that we won't use directly

256
00:15:37,560 --> 00:15:42,280
this profile right on Matomo, but we prefer asking the API

257
00:15:42,280 --> 00:15:46,680
to create a custom profile right on your SaaS.

258
00:15:46,680 --> 00:15:48,560
And then, because you're a company,

259
00:15:48,560 --> 00:15:51,360
you have to gain some money.

260
00:15:51,360 --> 00:15:55,600
And we have to configure Matomo Enhanced E-Commerce

261
00:15:55,600 --> 00:15:58,520
for your SaaS.

262
00:15:58,520 --> 00:16:02,240
It's a functionality that is built in Matomo.

263
00:16:02,240 --> 00:16:06,040
You can enable it just by turning on the switch

264
00:16:06,040 --> 00:16:10,320
to E-Commerce enabled and set up the currency you use.

265
00:16:12,960 --> 00:16:16,240
To have a fully implementation of Matomo Enhanced E-Commerce,

266
00:16:16,240 --> 00:16:18,360
you have to configure your data layer

267
00:16:18,360 --> 00:16:23,080
and add some code on the product page or in the funeral

268
00:16:23,080 --> 00:16:25,120
different page.

269
00:16:25,120 --> 00:16:28,960
The Matomo E-Commerce will trigger some events.

270
00:16:28,960 --> 00:16:36,000
And those events will be readable in the events report

271
00:16:36,000 --> 00:16:37,360
right in Matomo.

272
00:16:37,360 --> 00:16:40,400
All the events you will trigger will be under the event

273
00:16:40,400 --> 00:16:42,680
category of subscription.

274
00:16:42,680 --> 00:16:44,840
And as you can see on the screen that I just

275
00:16:44,840 --> 00:16:48,880
picked on the Matomo documentation because of my website

276
00:16:48,880 --> 00:16:50,600
is not an E-Commerce website.

277
00:16:50,600 --> 00:16:54,840
And I can't take a screenshot of my customers.

278
00:16:54,840 --> 00:16:57,640
So thanks to Matomo for this screen.

279
00:16:57,640 --> 00:17:00,600
And as you can see, all the event actions

280
00:17:00,600 --> 00:17:02,600
are signed up, cancellation, and upgrade

281
00:17:02,600 --> 00:17:06,120
about the subscription plan for all of your users.

282
00:17:06,120 --> 00:17:08,360
So it will be pretty cool.

283
00:17:08,360 --> 00:17:11,840
And as usual, you can add a value to events.

284
00:17:11,840 --> 00:17:16,680
And this value will be used to calculate a minimum value

285
00:17:16,680 --> 00:17:21,560
or an average value of your revenue.

286
00:17:21,560 --> 00:17:26,360
Then Matomo will provide you for 200 rupee a year a funeral

287
00:17:26,360 --> 00:17:32,200
E-Commerce plugin that will allow you to put a beacon

288
00:17:32,200 --> 00:17:36,680
in your funeral to define where your users are leaving

289
00:17:36,680 --> 00:17:44,160
this pattern and why the user are leaving their cart.

290
00:17:44,160 --> 00:17:49,360
So they trigger at every step a custom event.

291
00:17:49,360 --> 00:17:52,000
And this event will be will be catched by Matomo

292
00:17:52,000 --> 00:17:57,880
and generate some cool stuff and cool event-based report.

293
00:17:57,880 --> 00:18:01,520
But this is on a premium feature.

294
00:18:01,520 --> 00:18:04,760
So now we are able to collect data.

295
00:18:04,760 --> 00:18:08,080
But the most important part is to retrieve those data

296
00:18:08,080 --> 00:18:10,680
and create some cool reports and analyze

297
00:18:10,680 --> 00:18:16,040
them to take a good decision in the next time.

298
00:18:16,040 --> 00:18:21,320
For this second part, we will talk about segments

299
00:18:21,320 --> 00:18:24,360
because your Matomo instance is now filled by useful data.

300
00:18:24,360 --> 00:18:25,960
And we are now going to visualize them

301
00:18:25,960 --> 00:18:29,720
in the proper reports using segments.

302
00:18:29,720 --> 00:18:34,120
The first category of segments that I will create

303
00:18:34,120 --> 00:18:38,360
will be goal segments based on achievements or not of a goal.

304
00:18:38,360 --> 00:18:40,520
And here, as you can see, we just

305
00:18:40,520 --> 00:18:44,320
create cool segments which allow you

306
00:18:44,320 --> 00:18:51,320
to filter the visits using the achievements of a goal.

307
00:18:51,320 --> 00:18:55,360
And here I set the goal to subscribe,

308
00:18:55,360 --> 00:18:59,760
which is if a user have triggered an event subscribe

309
00:18:59,760 --> 00:19:02,080
which convert the goal subscribe,

310
00:19:02,080 --> 00:19:05,240
it will be filtered in this segment.

311
00:19:05,240 --> 00:19:08,320
It's pretty cool to activate a segment

312
00:19:08,320 --> 00:19:12,000
and continue to visualize all the reports in Matomo

313
00:19:12,000 --> 00:19:15,240
with a filtered view.

314
00:19:15,240 --> 00:19:17,840
Then the second type of segment I

315
00:19:17,840 --> 00:19:22,760
will allow you to create is about dimensions segments.

316
00:19:22,760 --> 00:19:27,160
Earlier in this talk, we already create two custom dimensions,

317
00:19:27,160 --> 00:19:29,760
one for the logged in user and the second one

318
00:19:29,760 --> 00:19:32,480
for the user plan.

319
00:19:32,480 --> 00:19:37,680
And we can have five types of results, visitor only,

320
00:19:37,680 --> 00:19:40,520
logged in user, premium user, in trial period users,

321
00:19:40,520 --> 00:19:42,560
and premium users.

322
00:19:42,560 --> 00:19:48,520
All of those configurations will be, for me, a custom segment.

323
00:19:48,520 --> 00:19:51,000
So here, for the example, I just created

324
00:19:51,000 --> 00:19:53,160
a segment for premium users.

325
00:19:53,160 --> 00:19:58,040
So you can select in the first dropdown the user plan.

326
00:19:58,040 --> 00:20:01,840
This is obviously your custom dimension.

327
00:20:01,840 --> 00:20:07,920
And then the operator is is and the value is about premium.

328
00:20:07,920 --> 00:20:12,800
So you will be able to store as many segments

329
00:20:12,800 --> 00:20:16,320
as you want in your selector and then switch between them.

330
00:20:16,320 --> 00:20:20,800
And it will be easier for you to track and to visualize

331
00:20:20,800 --> 00:20:26,480
the journey of your user right on the Matomo interface.

332
00:20:26,480 --> 00:20:30,920
This second part will be better for a technical or developer

333
00:20:30,920 --> 00:20:32,760
person.

334
00:20:32,760 --> 00:20:35,400
I invite you to enable JavaScript Tracking Error

335
00:20:35,400 --> 00:20:38,400
right in your Matomo configuration.

336
00:20:38,400 --> 00:20:41,000
For a Matomo Tag Manager user, it

337
00:20:41,000 --> 00:20:44,960
will be in the Matomo statistics variable.

338
00:20:44,960 --> 00:20:48,000
And you will just have a checkbox to enable,

339
00:20:48,000 --> 00:20:53,120
and it will collect for you JavaScript Tracking Error.

340
00:20:53,120 --> 00:20:55,160
This report will allow you to recreate the session

341
00:20:55,160 --> 00:20:58,080
of the user who encountered an error in an attempt

342
00:20:58,080 --> 00:20:59,400
to reproduce it.

343
00:20:59,400 --> 00:21:04,040
And it will be very, very important for SAS owner.

344
00:21:04,040 --> 00:21:11,240
The functionality will catch error displayed in the console

345
00:21:11,240 --> 00:21:16,680
and trigger an event, which are all grouped into the event

346
00:21:16,680 --> 00:21:18,760
category of JavaScript error.

347
00:21:18,760 --> 00:21:21,880
Here, as you can see, I have four JavaScript errors

348
00:21:21,880 --> 00:21:26,360
triggered from the beginning of the month.

349
00:21:26,360 --> 00:21:30,000
So we have the five, so I have to fix it.

350
00:21:30,000 --> 00:21:34,080
And as you can see in the second part, in Event Action,

351
00:21:34,080 --> 00:21:42,240
you will have the URL of the HTML page or the JavaScript

352
00:21:42,240 --> 00:21:46,840
file, which contains the error.

353
00:21:46,840 --> 00:21:48,920
And then if you switch to the event name,

354
00:21:48,920 --> 00:21:53,560
you will have the message write display in this table.

355
00:21:53,560 --> 00:21:55,760
It's a copy of the message, which

356
00:21:55,760 --> 00:22:00,240
is normally displayed in the console of your web browser.

357
00:22:00,240 --> 00:22:05,480
So it will help you to view a difference error.

358
00:22:05,480 --> 00:22:10,200
To exploit those information, you have to create a segment.

359
00:22:10,200 --> 00:22:12,080
This segment will be an event category

360
00:22:12,080 --> 00:22:14,560
based on JavaScript error.

361
00:22:14,560 --> 00:22:17,520
Event category is JavaScript error.

362
00:22:17,520 --> 00:22:21,720
This segment will be applied to all of your information.

363
00:22:21,720 --> 00:22:24,640
And then you can switch to the visitor log.

364
00:22:24,640 --> 00:22:28,320
And as you can see, this is the fourth visits

365
00:22:28,320 --> 00:22:30,640
that have encountered a JavaScript error

366
00:22:30,640 --> 00:22:33,880
since the beginning of the month.

367
00:22:33,880 --> 00:22:40,600
There is a kind of problem with this, because as you can see,

368
00:22:40,600 --> 00:22:42,840
every visitor that you can see on the screen

369
00:22:42,840 --> 00:22:48,040
has just made a one-page view and have three actions.

370
00:22:48,040 --> 00:22:52,320
Because of JavaScript tracking trigger an event,

371
00:22:52,320 --> 00:22:58,360
an event in Matomo counts into the actions.

372
00:22:58,360 --> 00:23:03,160
As you can see, a user who just walked through one page

373
00:23:03,160 --> 00:23:05,360
has three actions counted.

374
00:23:05,360 --> 00:23:09,400
So it will break the ratio of the actions per page or actions

375
00:23:09,400 --> 00:23:10,800
per session.

376
00:23:10,800 --> 00:23:16,320
And it will not let you have clear information.

377
00:23:16,320 --> 00:23:19,720
So maybe it will be fun to find a solution

378
00:23:19,720 --> 00:23:23,520
to not merge those events into the action counter.

379
00:23:26,080 --> 00:23:31,840
And then we enter in my favorite section of this talk.

380
00:23:31,840 --> 00:23:34,400
It's about the reporting API.

381
00:23:34,400 --> 00:23:36,520
So Matomo is now full of data.

382
00:23:36,520 --> 00:23:40,160
And Matomo have a great and powerful API.

383
00:23:40,160 --> 00:23:42,120
So why are you not using it in your back office

384
00:23:42,120 --> 00:23:45,520
to generate contextual charts?

385
00:23:45,520 --> 00:23:47,920
This is a screenshot of my own website

386
00:23:47,920 --> 00:23:53,280
where I provide some contents, mainly textual content.

387
00:23:53,280 --> 00:23:57,320
And here are some blog posts.

388
00:23:57,320 --> 00:24:01,440
As you can see, in my homemade back office, I have a chart.

389
00:24:01,440 --> 00:24:05,400
And this chart is generated directly from Matomo.

390
00:24:05,400 --> 00:24:11,240
In clear, Matomo API provides me the data I need.

391
00:24:11,240 --> 00:24:15,160
And those data are organized page per page.

392
00:24:15,160 --> 00:24:19,800
So I ask the Matomo API, providing the post URL

393
00:24:19,800 --> 00:24:25,920
and the Matomo API, let me find their data.

394
00:24:25,920 --> 00:24:30,800
I just configured the Matomo API to answer me in JSON format.

395
00:24:30,800 --> 00:24:35,960
And then I took those data and use

396
00:24:35,960 --> 00:24:40,880
them to build homemade charts using the HTML library chart

397
00:24:40,880 --> 00:24:42,720
GS.

398
00:24:42,720 --> 00:24:44,920
And as you can see, it's pretty nice.

399
00:24:44,920 --> 00:24:47,360
And I have the information right in my back office.

400
00:24:47,360 --> 00:24:50,160
And I don't have to connect to my Matomo instance

401
00:24:50,160 --> 00:24:52,680
to visualize them.

402
00:24:52,680 --> 00:24:54,380
Just in the right of the charts, you

403
00:24:54,380 --> 00:24:59,240
can see my visit KPI information and the bounce

404
00:24:59,240 --> 00:25:04,360
rate of every single episode.

405
00:25:04,360 --> 00:25:09,400
As a real user, I prefer looking at those charts

406
00:25:09,400 --> 00:25:12,600
right in my back office than switching to the Matomo

407
00:25:12,600 --> 00:25:15,960
interface and searching in the page reports

408
00:25:15,960 --> 00:25:19,200
to get those informations.

409
00:25:19,200 --> 00:25:21,600
And then we can do exactly the same thing

410
00:25:21,600 --> 00:25:25,160
with user AI-based data.

411
00:25:25,160 --> 00:25:26,960
So here is my own profile, because I

412
00:25:26,960 --> 00:25:29,480
don't want to show you other profiles.

413
00:25:29,480 --> 00:25:33,360
But here, as you can see, I have a user ID set up on my website

414
00:25:33,360 --> 00:25:35,960
and the user ID.

415
00:25:35,960 --> 00:25:42,160
Let me asking the API of Matomo to get every page view

416
00:25:42,160 --> 00:25:46,600
and sessions from a specific user.

417
00:25:46,600 --> 00:25:49,840
So here, the JSON data are visualized in a custom chart

418
00:25:49,840 --> 00:25:53,280
to grant a clear vision of the user visits.

419
00:25:53,280 --> 00:25:56,600
As you can see, I'm pretty active on my website.

420
00:25:56,600 --> 00:26:00,480
And the first November, I had a long work

421
00:26:00,480 --> 00:26:02,680
to reorganize contents on my website.

422
00:26:02,680 --> 00:26:07,440
So I made almost 450 visits.

423
00:26:07,440 --> 00:26:12,640
But I can see if a user is still active or not on the website.

424
00:26:16,280 --> 00:26:20,240
An idea of a CMS integration of that Matomo API

425
00:26:20,240 --> 00:26:24,200
is because of the changements about Google Search Engine

426
00:26:24,200 --> 00:26:26,920
and integrating the Core Web Vitals.

427
00:26:26,920 --> 00:26:33,520
So here, it's an idea that we can build a plugin for CMS,

428
00:26:33,520 --> 00:26:39,720
like WordPress, to show up just on the line of the table

429
00:26:39,720 --> 00:26:41,840
that display all the page or all the posts

430
00:26:41,840 --> 00:26:45,840
are published on your website, a clear indicator,

431
00:26:45,840 --> 00:26:50,160
red to green indicator, to determine if the page load

432
00:26:50,160 --> 00:26:53,000
faster or not.

433
00:26:53,000 --> 00:26:56,160
I'm not a graphist, but I just make

434
00:26:56,160 --> 00:27:00,920
that little visualization based on the screen

435
00:27:00,920 --> 00:27:03,640
from the documentation of WordPress.

436
00:27:03,640 --> 00:27:07,040
And I just add page speed and a green light.

437
00:27:07,040 --> 00:27:09,880
But as you can see, it will be a better way

438
00:27:09,880 --> 00:27:14,560
to have this kind of information.

439
00:27:14,560 --> 00:27:19,400
And then to go further, you can also create custom alerts.

440
00:27:19,400 --> 00:27:24,280
But you can create custom alerts for almost every support,

441
00:27:24,280 --> 00:27:27,840
not only a SaaS platform.

442
00:27:27,840 --> 00:27:33,680
But I create all the time custom alerts about drop in visit,

443
00:27:33,680 --> 00:27:34,920
drop in revenue.

444
00:27:34,920 --> 00:27:38,120
If you are a SaaS platform, drop in subscriptions.

445
00:27:38,120 --> 00:27:43,040
It will be very important for you to keep an eye on it.

446
00:27:43,040 --> 00:27:47,040
And you can do it simply by installing the custom alerts

447
00:27:47,040 --> 00:27:53,640
plugin, who is already available on the marketplace of MetaMo.

448
00:27:53,640 --> 00:27:57,560
And then to continue and go further and furthermore,

449
00:27:57,560 --> 00:28:01,200
there is a premium bundle of plugin,

450
00:28:01,200 --> 00:28:05,160
which is specifically interesting for your SaaS

451
00:28:05,160 --> 00:28:07,520
as a heat map and session recording,

452
00:28:07,520 --> 00:28:10,240
which generates an amount and amount of data,

453
00:28:10,240 --> 00:28:15,240
but will allow you to recreate the session of your user.

454
00:28:15,240 --> 00:28:19,000
Just imagine that this plugin mixed with the GS tracking

455
00:28:19,000 --> 00:28:21,320
error, and you will be able to recreate

456
00:28:21,320 --> 00:28:23,680
exactly the session of the user to try

457
00:28:23,680 --> 00:28:31,920
to reproduce the GS error that he encountered in her visits.

458
00:28:31,920 --> 00:28:35,400
It will be pretty, pretty useful for your SaaS.

459
00:28:35,400 --> 00:28:38,440
And especially if you have a platform that

460
00:28:38,440 --> 00:28:43,320
shares content for many users as a content editor and visitors,

461
00:28:43,320 --> 00:28:48,760
you will be really interested in the Media Analytics

462
00:28:48,760 --> 00:28:54,000
plugin, which allows you to track video and audio

463
00:28:54,000 --> 00:28:58,280
and give you information such as the length of the video

464
00:28:58,280 --> 00:29:04,360
that users really watch or the level of the volume

465
00:29:04,360 --> 00:29:07,040
when they hear some audio or video.

466
00:29:07,040 --> 00:29:11,040
And the next one that I didn't found on the base

467
00:29:11,040 --> 00:29:15,720
is the User Flow plugin that allows you to track,

468
00:29:15,720 --> 00:29:20,320
to visualize, not to track, to visualize all of your users

469
00:29:20,320 --> 00:29:23,040
on the platform.

470
00:29:23,040 --> 00:29:31,040
But it is very more specific to certain kind of SaaS.

471
00:29:31,040 --> 00:29:33,000
So thank you for watching.

472
00:29:33,000 --> 00:29:40,280
I will look for the different questions you have to ask to me.

473
00:29:40,280 --> 00:29:43,640
And thank you for all the people who are still there

474
00:29:43,640 --> 00:29:46,280
until this presentation.

475
00:29:46,280 --> 00:29:49,360
So as I can see, I have one question.

476
00:29:49,360 --> 00:29:51,880
Can you disclose the name of the SaaS platform

477
00:29:51,880 --> 00:29:56,120
you applied those implementation?

478
00:29:56,120 --> 00:30:00,120
Actually, for the demonstration, you saw mine.

479
00:30:00,120 --> 00:30:05,080
And the other one are startups at Nantes in the city

480
00:30:05,080 --> 00:30:06,640
where I live, actually.

481
00:30:06,640 --> 00:30:12,680
And I think, no, I can't say those names.

482
00:30:12,680 --> 00:30:17,360
According to you, Renan, what is missing within Matomo?

483
00:30:17,360 --> 00:30:21,080
What is missing in Matomo?

484
00:30:21,080 --> 00:30:23,680
I don't think if it's missing, but for me,

485
00:30:23,680 --> 00:30:27,800
it's about the data storage.

486
00:30:27,800 --> 00:30:33,360
So if you are interested in Google Analytics 3 and 4,

487
00:30:33,360 --> 00:30:36,400
as you can see, they break the change

488
00:30:36,400 --> 00:30:41,280
that they are breaking the data storage to another one

489
00:30:41,280 --> 00:30:43,120
based on event.

490
00:30:43,120 --> 00:30:46,640
And Matomo is a mix of this.

491
00:30:46,640 --> 00:30:50,040
And as you can see, for GS tracking or e-commerce tracking,

492
00:30:50,040 --> 00:30:53,760
they are all based on event, which is pretty cool.

493
00:30:53,760 --> 00:31:01,200
And I think the way of the future for analytics software.

494
00:31:01,200 --> 00:31:04,680
But it breaks many reports simply

495
00:31:04,680 --> 00:31:11,560
because all the events are mixed on the same place.

496
00:31:11,560 --> 00:31:15,760
So to get a clearer vision, we almost every time

497
00:31:15,760 --> 00:31:22,600
have to create custom segments to see only specific events.

498
00:31:22,600 --> 00:31:25,360
Maybe the event reports could be better.

499
00:31:28,000 --> 00:31:30,200
Is there any other question?

500
00:31:30,200 --> 00:31:35,520
I don't think.

501
00:31:35,520 --> 00:31:38,800
Let's wait just a few more seconds

502
00:31:38,800 --> 00:31:43,640
to make sure that nobody else is making questions in the chat.

503
00:31:43,640 --> 00:32:00,200
OK.

504
00:32:13,640 --> 00:32:16,080
OK, I have another question.

505
00:32:16,080 --> 00:32:19,600
Why API did you find a solution to have last five minutes,

506
00:32:19,600 --> 00:32:21,680
10 minutes hit on a specific page?

507
00:32:25,680 --> 00:32:31,760
My API code are based on the timestamp selector.

508
00:32:31,760 --> 00:32:35,760
And I guess it's about day, not five or 10 minutes.

509
00:32:35,760 --> 00:32:36,760
It's a specific.

510
00:32:36,760 --> 00:32:39,360
I'm not sure if it's five or 10 minutes.

511
00:32:39,360 --> 00:32:44,560
I guess it's about day, not five or 10 minutes.

512
00:32:44,560 --> 00:32:48,160
I don't remember because all of my time selector

513
00:32:48,160 --> 00:32:52,760
are based on day, weeks, and months selector, not

514
00:32:52,760 --> 00:32:55,080
about minutes.

515
00:32:55,080 --> 00:32:58,560
But maybe I'm sure you will find your answer right

516
00:32:58,560 --> 00:33:01,160
in the documentation.

517
00:33:01,160 --> 00:33:03,720
And how hard is it to extract data out

518
00:33:03,720 --> 00:33:08,840
of the reporting API of Matahomo and show it on a web page

519
00:33:08,840 --> 00:33:10,480
like you did?

520
00:33:10,480 --> 00:33:13,160
It really depends on the skills you already had.

521
00:33:13,160 --> 00:33:20,080
So the Matahomo API is pretty cool and pretty easy to use.

522
00:33:20,080 --> 00:33:22,840
It respects the standard of many, many APIs.

523
00:33:22,840 --> 00:33:24,800
So if you are a web developer, you're

524
00:33:24,800 --> 00:33:29,440
already familiar with the use of API.

525
00:33:29,440 --> 00:33:32,080
So the Matahomo part is not the harder for me.

526
00:33:32,080 --> 00:33:37,960
I think the harder is to recreate the interface

527
00:33:37,960 --> 00:33:39,360
in your back office.

528
00:33:39,360 --> 00:33:45,240
But asking Matahomo via the API to get the data you need

529
00:33:45,240 --> 00:33:50,120
is just about 20 minutes if you have to read the documentation.

530
00:33:50,120 --> 00:33:57,760
And I think I spend most of my time about headers

531
00:33:57,760 --> 00:34:06,480
and requesting to the API, but that is pretty simple to set up.

532
00:34:06,480 --> 00:34:08,840
Maybe I will make a video to explain

533
00:34:08,840 --> 00:34:11,560
how Matahomo API will work and publish it.

534
00:34:11,560 --> 00:34:15,680
But actually, it's not so hard.

535
00:34:15,680 --> 00:34:18,160
And Valentin asks, API is powerful,

536
00:34:18,160 --> 00:34:21,240
but what are the limits?

537
00:34:21,240 --> 00:34:25,000
The limits of the API, especially,

538
00:34:25,000 --> 00:34:31,120
I saw that when I tried to create a list.

539
00:34:31,120 --> 00:34:34,680
So on my own back office, I have a list of all my posts

540
00:34:34,680 --> 00:34:37,440
with pagination and stuff like that.

541
00:34:37,440 --> 00:34:42,720
And I will use the API to display information

542
00:34:42,720 --> 00:34:45,280
right in this list, but it will very, very

543
00:34:45,280 --> 00:34:52,880
be heavy to carry on and will make many, many requests

544
00:34:52,880 --> 00:34:59,480
to Matahomo if the API were set on this main page.

545
00:34:59,480 --> 00:35:04,400
But I think the Matahomo API is powerful to send data

546
00:35:04,400 --> 00:35:10,200
to Matahomo and to ask them, but only in a main entity page.

547
00:35:10,200 --> 00:35:15,000
So as you can see, I just use the Matahomo API

548
00:35:15,000 --> 00:35:19,120
on a view page of a single entity

549
00:35:19,120 --> 00:35:22,480
as a single post entity or single user entity,

550
00:35:22,480 --> 00:35:25,120
but not in a page with several entity

551
00:35:25,120 --> 00:35:27,200
because of the amount of requests

552
00:35:27,200 --> 00:35:34,240
we have to create if it's a data table visualization page.

553
00:35:34,240 --> 00:35:36,400
And what are the limits?

554
00:35:36,400 --> 00:35:39,280
The limits is like all the API.

555
00:35:39,280 --> 00:35:43,760
So if you follow the REST documentation,

556
00:35:43,760 --> 00:35:51,200
which is a kind of a guide for you who build an API,

557
00:35:51,200 --> 00:35:55,520
if you follow those guidelines, you maybe

558
00:35:55,520 --> 00:35:59,240
have to create many requests to get just one information

559
00:35:59,240 --> 00:36:01,600
if you want to create some custom reports.

560
00:36:01,600 --> 00:36:03,800
But it's not about Matahomo API.

561
00:36:03,800 --> 00:36:10,000
It's most about generic API guidelines.

562
00:36:10,000 --> 00:36:12,440
I hope that I answered your question,

563
00:36:12,440 --> 00:36:17,000
which was a bit large.

564
00:36:19,680 --> 00:36:21,520
If there are any other questions?

565
00:36:28,680 --> 00:36:31,920
Apparently, there are no further questions in the chat.

566
00:36:31,920 --> 00:36:35,240
So I'd like to thank you, Ronan, for joining Matahomo Camp

567
00:36:35,240 --> 00:36:38,200
and for this very interesting session.

568
00:36:38,200 --> 00:36:38,880
Thank you.

569
00:36:38,880 --> 00:36:39,480
Thank you, too.

570
00:36:39,480 --> 00:36:43,760
And thank you, all of you, for being there today.

571
00:36:43,760 --> 00:36:45,120
And thank you for the organization

572
00:36:45,120 --> 00:36:48,040
of this wonderful event.

573
00:36:48,040 --> 00:36:51,320
Thank you.

574
00:36:51,320 --> 00:36:54,440
So we finished a little bit earlier with this session,

575
00:36:54,440 --> 00:36:58,960
but I'd like to invite everyone to join us at 5 PM

576
00:36:58,960 --> 00:37:00,960
for the closing notes.

577
00:37:00,960 --> 00:37:02,800
Thank you.

